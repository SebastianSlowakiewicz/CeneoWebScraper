{% extends "base.html.jinja" %}
{% block content %}
{% block title %}
Lista opinii o produkcie
{% endblock title %}
<div class="container">
  <div class="row">
    <div class="col-md-12">
      <h4>Opinie produktu</h4>

      <table id="opinions-table" class="table table-striped table-bordered">
        <thead>
          <tr>
            <th>Id opinii</th>
            <th>Autor</th>
            <th>Rekomendacja</th>
            <th>Liczba gwiazdek</th>
            <th>Opinia potwierdzona zakupem</th>
            <th>Data opinii</th>
            <th>Data zakupu</th>
            <th>Liczba osób uznało opinię za przydatną</th>
            <th>Liczba osób uznało opinię za nieprzydatną</th>
            <th>Treść opinii</th>
            <th>Lista wad</th>
            <th>Lista zalet</th>
          </tr>
        </thead>
        <tbody id="opinions-tbody">
          {% for opinion in opinions %}
          <tr>
              <td>{{opinion.opinion_id}}</td>
              <td>{{opinion.author}}</td>
              <td>{{opinion.recommendation}}</td>
              <td>{{opinion.stars}}</td>
              <td>{{opinion.confirmed_purchase}}</td>
              <td>{{opinion.post_date}}</td>
              <td>{{opinion.purchase_date}}</td>
              <td>{{opinion.useful}}</td>
              <td>{{opinion.useless}}</td>
              <td>{{opinion.content}}</td>
              <td>{{opinion.cons}}</td>
              <td>{{opinion.pros}}</td>
          </tr>
          {% endfor %}
      </tbody>
        </tbody>
      </table>
      <button class="btn btn-dark" id="download-button">Pobierz jako JSON</button>
      <a href="{{url_for('charts')}}" class="btn btn-dark">Wykresy dotyczące produktu</a>
    </div>
  </div>
</div>
  <div class="text-center mt-3">

  </div>
<script>fetch('https://api.ceneo.pl/api/v1/products')
  .then(response => response.json())
  .then(data => {
    const opinionsTable = document.getElementById('opinions-table');
    const opinionsTbody = document.getElementById('opinions-tbody');
    data.forEach(opinion => {
      const opinionRow = document.createElement('tr');
      opinionRow.innerHTML = `
        <td>${opinion.id}</td>
        <td>${opinion.author}</td>
        <td>${opinion.recommendation}</td>
        <td>${opinion.rating}</td>
        <td>${opinion.isPurchaseConfirmed}</td>
        <td>${opinion.date}</td>
        <td>${opinion.purchaseDate}</td>
        <td>${opinion.usefulCount}</td>
        <td>${opinion.notUsefulCount}</td>
        <td>${opinion.content}</td>
        <td>${opinion.faults}</td>
        <td>${opinion.advantages}</td>
        `;
      opinionsTbody.appendChild(opinionRow);
    });
  })
  .catch(error => console.error(error));

// sortowanie i filtrowanie danych
const sortButtons = document.querySelectorAll('.sort-button');
sortButtons.forEach(button => {
  button.addEventListener('click', () => {
    const column = button.dataset.column;
    const direction = button.dataset.direction;
    // sortowanie i filtrowanie danych
  });
});

// pobieranie pliku
document.getElementById('download-button').addEventListener('click', () => {
  const fileContent = [];
  const tableRows = document.querySelectorAll('#opinions-tbody tr');
  tableRows.forEach(row => {
    const rowContent = [];
    row.querySelectorAll('td').forEach(cell => {
      rowContent.push(cell.textContent);
    });
    fileContent.push(rowContent.join(','));
  });
  const file = new Blob([fileContent.join('\n')], { type: 'text/json' });
  const url = URL.createObjectURL(file);
  const link = document.createElement('a');
  link.href = url;
  link.download = 'opinions.json';
  link.click();
});

// filtrowanie danych
document.getElementById('filter-button').addEventListener('click', () => {
  const filterInput = document.getElementById('filter-input');
  const filterValue = filterInput.value;
  const tableRows = document.querySelectorAll('#opinions-tbody tr');
  tableRows.forEach(row => {
    const rowContent = [];
    row.querySelectorAll('td').forEach(cell => {
      rowContent.push(cell.textContent);
    });
    if (rowContent.includes(filterValue)) {
      row.style.display = 'table-row';
    } else {
      row.style.display = 'none';
    }
  });
});</script>
{%endblock%}