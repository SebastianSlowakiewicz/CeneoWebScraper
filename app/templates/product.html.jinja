{% extends "base.html.jinja" %}
{% block content%}
<div class="container">
    <div class="row">
      <div class="col-md-12">
        <h4>Opinie produktu</h4>
    
        <table id="opinions-table" class="table table-striped table-bordered">
          <thead>
            <tr>
              <th>Id opinii</th>
              <th>Autor</th>
              <th>Rekomendacja</th>
              <th>Liczba gwiazdek</th>
              <th>Opinia potwierdzona zakupem</th>
              <th>Data opinii</th>
              <th>Data zakupu</th>
              <th>Liczba osób uznało opinię za przydatną</th>
              <th>Liczba osób uznało opinię za nieprzydatną</th>
              <th>Treść opinii</th>
              <th>Lista wad</th>
              <th>Lista zalet</th>
            </tr>
          </thead>
          <tbody id="opinions-tbody">
            <!-- Tutaj zostaną wstawione opinie z bazy danych -->
          <tr>
            <td>1</td>
            <td>Jan Kowalski</td>
            <td>Tak</td>
            <td>5</td>
            <td>Tak</td>
            <td>2024-06-01</td>
            <td>2024-05-28</td>
            <td>10</td>
            <td>2</td>
            <td>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</td>
            <td>-</td>
            <td>Dobra jakość, szybka dostawa.</td>
          </tr>
          <!-- Kolejne opinie mogą być dodane tutaj -->
        </tbody>
          </tbody>
        </table>
        <button class="btn btn-dark" id="download-button">Pobierz jako CSV</button>
        <a href="{{url_for('charts')}}" class="btn btn-dark">Wykresy dotyczące produktu</a>
      </div>
    </div>
  </div>
    <div class="text-center mt-3">
      
    </div>
<script>fetch('https://api.ceneo.pl/api/v1/products')
    .then(response => response.json())
    .then(data => {
      const opinionsTable = document.getElementById('opinions-table');
      const opinionsTbody = document.getElementById('opinions-tbody');
      data.forEach(opinion => {
        const opinionRow = document.createElement('tr');
        opinionRow.innerHTML = `
          <td>${opinion.id}</td>
          <td>${opinion.author}</td>
          <td>${opinion.recommendation}</td>
          <td>${opinion.rating}</td>
          <td>${opinion.isPurchaseConfirmed}</td>
          <td>${opinion.date}</td>
          <td>${opinion.purchaseDate}</td>
          <td>${opinion.usefulCount}</td>
          <td>${opinion.notUsefulCount}</td>
          <td>${opinion.content}</td>
          <td>${opinion.faults}</td>
          <td>${opinion.advantages}</td>
        `;
        opinionsTbody.appendChild(opinionRow);
      });
    })
    .catch(error => console.error(error));
  
  // sortowanie i filtrowanie danych
  const sortButtons = document.querySelectorAll('.sort-button');
  sortButtons.forEach(button => {
    button.addEventListener('click', () => {
      const column = button.dataset.column;
      const direction = button.dataset.direction;
      // sortowanie i filtrowanie danych
    });
  });
  
  // pobieranie pliku
  document.getElementById('download-button').addEventListener('click', () => {
    const fileContent = [];
    const tableRows = document.querySelectorAll('#opinions-tbody tr');
    tableRows.forEach(row => {
      const rowContent = [];
      row.querySelectorAll('td').forEach(cell => {
        rowContent.push(cell.textContent);
      });
      fileContent.push(rowContent.join(','));
    });
    const file = new Blob([fileContent.join('\n')], { type: 'text/csv' });
    const url = URL.createObjectURL(file);
    const link = document.createElement('a');
    link.href = url;
    link.download = 'opinions.csv';
    link.click();
  });
  
  // filtrowanie danych
  document.getElementById('filter-button').addEventListener('click', () => {
    const filterInput = document.getElementById('filter-input');
    const filterValue = filterInput.value;
    const tableRows = document.querySelectorAll('#opinions-tbody tr');
    tableRows.forEach(row => {
      const rowContent = [];
      row.querySelectorAll('td').forEach(cell => {
        rowContent.push(cell.textContent);
      });
      if (rowContent.includes(filterValue)) {
        row.style.display = 'table-row';
      } else {
        row.style.display = 'none';
      }
    });
  });</script>
    
{% endblock content%}
{% block title%}
Lista produktów
{% endblock title %}